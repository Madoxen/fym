[{"/home/mado/projects/fymate-configs/fymate/client/src/index.tsx":"1","/home/mado/projects/fymate-configs/fymate/client/src/store.ts":"2","/home/mado/projects/fymate-configs/fymate/client/src/App.tsx":"3","/home/mado/projects/fymate-configs/fymate/client/src/features/auth/reducers.ts":"4","/home/mado/projects/fymate-configs/fymate/client/src/pages/About.tsx":"5","/home/mado/projects/fymate-configs/fymate/client/src/pages/Register.tsx":"6","/home/mado/projects/fymate-configs/fymate/client/src/components/Navigation.tsx":"7","/home/mado/projects/fymate-configs/fymate/client/src/pages/Home.tsx":"8","/home/mado/projects/fymate-configs/fymate/client/src/pages/AddPost.tsx":"9","/home/mado/projects/fymate-configs/fymate/client/src/pages/Profile.tsx":"10","/home/mado/projects/fymate-configs/fymate/client/src/pages/Login.tsx":"11","/home/mado/projects/fymate-configs/fymate/client/src/features/counter/index.ts":"12","/home/mado/projects/fymate-configs/fymate/client/src/features/auth/types.ts":"13","/home/mado/projects/fymate-configs/fymate/client/src/components/tags/TagPanel.tsx":"14","/home/mado/projects/fymate-configs/fymate/client/src/components/loginModal/LoginModal.tsx":"15","/home/mado/projects/fymate-configs/fymate/client/src/components/search/PostBoard.tsx":"16","/home/mado/projects/fymate-configs/fymate/client/src/components/search/Board.tsx":"17","/home/mado/projects/fymate-configs/fymate/client/src/components/Profile/EditProfile.tsx":"18","/home/mado/projects/fymate-configs/fymate/client/src/features/counter/selectors.ts":"19","/home/mado/projects/fymate-configs/fymate/client/src/features/counter/counterReducer.ts":"20","/home/mado/projects/fymate-configs/fymate/client/src/features/counter/actionTypes.ts":"21","/home/mado/projects/fymate-configs/fymate/client/src/components/search/Post.tsx":"22","/home/mado/projects/fymate-configs/fymate/client/src/components/search/UserBoard.tsx":"23","/home/mado/projects/fymate-configs/fymate/client/src/components/tags/TagList.tsx":"24","/home/mado/projects/fymate-configs/fymate/client/src/components/search/UserCard.tsx":"25"},{"size":308,"mtime":1610215692289,"results":"26","hashOfConfig":"27"},{"size":494,"mtime":1610215692289,"results":"28","hashOfConfig":"27"},{"size":921,"mtime":1610361903003,"results":"29","hashOfConfig":"27"},{"size":1668,"mtime":1610228199235,"results":"30","hashOfConfig":"27"},{"size":681,"mtime":1609108078747,"results":"31","hashOfConfig":"27"},{"size":2926,"mtime":1610215692289,"results":"32","hashOfConfig":"27"},{"size":1158,"mtime":1610361903003,"results":"33","hashOfConfig":"27"},{"size":324,"mtime":1610361918419,"results":"34","hashOfConfig":"27"},{"size":2321,"mtime":1610361903003,"results":"35","hashOfConfig":"27"},{"size":1679,"mtime":1610361903003,"results":"36","hashOfConfig":"27"},{"size":1414,"mtime":1610361903003,"results":"37","hashOfConfig":"27"},{"size":192,"mtime":1609104264974,"results":"38","hashOfConfig":"27"},{"size":336,"mtime":1610215692289,"results":"39","hashOfConfig":"27"},{"size":1946,"mtime":1610362164387,"results":"40","hashOfConfig":"27"},{"size":3014,"mtime":1610215692289,"results":"41","hashOfConfig":"27"},{"size":1532,"mtime":1610361918419,"results":"42","hashOfConfig":"27"},{"size":2826,"mtime":1610361918419,"results":"43","hashOfConfig":"27"},{"size":2633,"mtime":1610361903003,"results":"44","hashOfConfig":"27"},{"size":110,"mtime":1609104264566,"results":"45","hashOfConfig":"27"},{"size":443,"mtime":1609104265330,"results":"46","hashOfConfig":"27"},{"size":106,"mtime":1609104267978,"results":"47","hashOfConfig":"27"},{"size":1101,"mtime":1610361918419,"results":"48","hashOfConfig":"27"},{"size":1341,"mtime":1610361918419,"results":"49","hashOfConfig":"27"},{"size":735,"mtime":1610361918419,"results":"50","hashOfConfig":"27"},{"size":684,"mtime":1610361918419,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"a4d5hk",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"55"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mado/projects/fymate-configs/fymate/client/src/index.tsx",["111"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport dotenv from 'dotenv'\nimport './index.css'\n\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n",["112","113"],"/home/mado/projects/fymate-configs/fymate/client/src/store.ts",[],"/home/mado/projects/fymate-configs/fymate/client/src/App.tsx",[],"/home/mado/projects/fymate-configs/fymate/client/src/features/auth/reducers.ts",["114","115","116","117","118"],"import jwt from 'jsonwebtoken'\nimport store from \"../../store\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { REPLACE_TOKENS, TokensActionTypes } from './types'\nimport { getRefreshToken } from \"./selectors\"\n\n\nconst initialState = {\n    accessToken: '',\n    refreshToken: '',\n    refreshTimeout: Infinity, // Time to token refresh\n    accessTimeout: Infinity, // Time to token refresh\n}\nlet refreshTimeoutID: NodeJS.Timeout | null = null;\n\n\n\nfunction silentRefresh() {\n\n}\n\n\nexport default (state = initialState, action: TokensActionTypes) => {\n    if (action.type === REPLACE_TOKENS) {\n        try {\n            const decodedAcc = jwt.decode(action.tokens.accessToken, {\n                complete: true,\n            }) as { [key: string]: any }\n            const decodedRef = jwt.decode(action.tokens.refreshToken, {\n                complete: true,\n            }) as { [key: string]: any }\n\n            if (refreshTimeoutID !== null)\n                clearTimeout(refreshTimeoutID);\n\n            console.log((decodedAcc.payload.exp * 1000 - Date.now()));\n            refreshTimeoutID = setTimeout(silentRefresh, 5000);\n\n            return {\n                ...state,\n                accessToken: action.tokens.accessToken,\n                refreshToken: action.tokens.refreshToken,\n                accessTimeout: decodedAcc.payload.exp,\n                refreshTimeout: decodedRef.payload.exp,\n            }\n        } catch {\n            if (refreshTimeoutID !== null)\n                clearTimeout(refreshTimeoutID);\n            // If there was an error with parsing the token, logout the user\n            return state\n        }\n    }\n    return state\n}\n","/home/mado/projects/fymate-configs/fymate/client/src/pages/About.tsx",[],"/home/mado/projects/fymate-configs/fymate/client/src/pages/Register.tsx",[],"/home/mado/projects/fymate-configs/fymate/client/src/components/Navigation.tsx",[],"/home/mado/projects/fymate-configs/fymate/client/src/pages/Home.tsx",["119"],"import React, { Fragment } from 'react'\nimport Counter from '../components/counter/Counter'\nimport LoginModal from '../components/loginModal/LoginModal'\nimport Board from '../components/search/Board'\n\nexport const Home: React.FC = () => {\n\n  return (\n    <Fragment>\n      <Board/>\n      <LoginModal />\n    </Fragment>\n  )\n}\n","/home/mado/projects/fymate-configs/fymate/client/src/pages/AddPost.tsx",["120","121"],"import React, { Fragment } from 'react'\nimport { Button, FormControl, FormGroup, FormLabel } from 'react-bootstrap'\nimport LoginModal from '../components/loginModal/LoginModal'\nimport TagPanel from '../components/tags/TagPanel'\nimport { ITags, IPostPOST } from '../components/props/Interfaces'\n\nexport const AddPost: React.FC = () => {\n    //TAGS\n    const tags = [\n        {\n            \"tagid\": 1,\n            \"name\": \"Programista\"\n        },\n        {\n            \"tagid\": 2,\n            \"name\": \"Grafik\"\n        }\n    ]\n    //POST to POST HAAHAHAH\n    const PostPOST: IPostPOST = {\n        content: \"\",\n        title: \"\",\n        tagids: []\n    }\n\n    const getActiveTags: Function = (tags: ITags[]): void => {\n        var ids: number[] = []\n\n        tags.map(tag => {\n            ids.push(tag.tagid)\n        })\n        PostPOST.tagids = ids\n    }\n\n    //TODO SEND Post :)\n    const SendChanges = (): void => {\n        console.log(PostPOST)\n    }\n\n    return (\n        <Fragment>\n            <h1>ADD POST</h1>\n            <div className=\"add-post\">\n\n                <FormGroup>\n                    <FormLabel>Add your post title</FormLabel>\n                    <FormControl\n                        type=\"text\"\n                        onChange={e => PostPOST.title = e.target.value}\n                    ></FormControl>\n\n                </FormGroup>\n\n                <FormGroup>\n                    <FormLabel>Add tags to your posts this will help another find your offert</FormLabel>\n                </FormGroup>\n                <TagPanel tags={tags} updateTags={getActiveTags}></TagPanel>\n\n\n                <FormGroup>\n                    <FormLabel>Description your post</FormLabel>\n                    <FormControl\n                        as=\"textarea\"\n                        type=\"text\"\n                        onChange={e => PostPOST.content = e.target.value}\n                    >\n\n                    </FormControl>\n                </FormGroup>\n\n                <FormGroup>\n                    <Button\n                        className=\"btnFormSend\"\n                        variant=\"outline-success\"\n                        onClick={SendChanges}\n                    >\n                        Add Post\n                    </Button>\n                </FormGroup>\n\n            </div>\n\n        </Fragment >\n    )\n}\n","/home/mado/projects/fymate-configs/fymate/client/src/pages/Profile.tsx",["122"],"import React, { Fragment } from 'react'\nimport EditProfile from '../components/Profile/EditProfile'\nimport PostBoard from '../components/search/PostBoard'\n\nexport const Profile: React.FC = () => {\n    //need current user \n    const user = {\n        \"userid\": 2,\n        \"accountid\": 3,\n        \"profiledescription\": \"Hej im derek and i taste like serek\",\n        \"phone\": \"111 222 111\",\n        \"email\": \"derek@serek.com\",\n        \"tagIDs\": [1, 2]\n    }\n\n    //TAGS\n    const tags = [\n        {\n            \"tagid\": 1,\n            \"name\": \"Programista\"\n        },\n        {\n            \"tagid\": 2,\n            \"name\": \"Grafik\"\n        }\n    ]\n\n    const UserPosts = [\n        {\n            \"postid\": 13,\n            \"userid\": 3,\n            \"content\": \"1 Yes this is another post like that :D\",\n            \"title\": \"1 Anotha one\",\n            \"tagids\": [\n                2\n            ]\n        },\n        {\n            \"postid\": 14,\n            \"userid\": 2,\n            \"content\": \"2 Yes this is another post like that :D\",\n            \"title\": \"2 Anotha one\",\n            \"tagids\": [\n                2\n            ]\n        },\n        {\n            \"postid\": 15,\n            \"userid\": 2,\n            \"content\": \"3 Yes this is another post like that :D\",\n            \"title\": \"3 Anotha one\",\n            \"tagids\": [\n                1,\n                2\n            ]\n        }\n    ]\n    return (\n        <Fragment>\n            <h1 style={{ textAlign: \"center\" }}>Edit Your Profile</h1>\n            <EditProfile user={user} tags={tags}></EditProfile>\n            <h1 style={{ textAlign: \"center\" }}>Your Post</h1>\n            <PostBoard></PostBoard>\n        </Fragment>\n    )\n}\n","/home/mado/projects/fymate-configs/fymate/client/src/pages/Login.tsx",[],"/home/mado/projects/fymate-configs/fymate/client/src/features/counter/index.ts",[],"/home/mado/projects/fymate-configs/fymate/client/src/features/auth/types.ts",[],"/home/mado/projects/fymate-configs/fymate/client/src/components/tags/TagPanel.tsx",[],"/home/mado/projects/fymate-configs/fymate/client/src/components/loginModal/LoginModal.tsx",[],"/home/mado/projects/fymate-configs/fymate/client/src/components/search/PostBoard.tsx",["123"],"import React from 'react'\nimport { IPost, ITags,IUser } from '../props/Interfaces'\nimport Post from './Post'\nimport TagPanel from '../tags/TagPanel'\n\ninterface Props{\n    users: IUser[];\n    tags: ITags[];\n    posts: IPost[];\n    filtr: ITags[];\n}\n\nconst PostBoard: React.FC<Props> = ({users,tags,posts,filtr}) => {\n\n    const listPosts: Function = (): JSX.Element[] => \n    {\n        let postArr: IPost[] = []\n        let postJSX: JSX.Element[] = []\n        if(filtr.length !== 0) \n        {\n            posts.forEach(post => haveTag(post,filtr) ? postArr.push(post) : null);\n            postArr.sort((a,b) => countUserTags(b) - countUserTags(a));\n        }\n        else\n        {\n            posts.forEach(post => postArr.push(post));\n        }\n        postArr.forEach(post => postJSX.push(<Post tags={tags} post={post} users={users}/>));\n        return postJSX;\n    }\n\n    const haveTag: Function = (post:IPost,tags:ITags[]): boolean => \n    {\n        let have = false;\n        post.tagids.forEach(tagId => \n            tags.forEach(tag => \n                tag.tagid === tagId ? have = true : null)\n            );\n        return have;\n    }\n\n    const countUserTags: Function = (post: IPost): number =>\n    {\n        let counter = 0;\n        filtr.forEach(tag => post.tagids.includes(tag.tagid) ? counter++ : null)\n        return counter;\n    }\n\n    return(<div>{listPosts()}</div>)\n    //How call edit function \n    //<Post post={posts[0]} tags={tags} users={users} edit={() => console.log(\"Edit\")}/>\n};\nexport default PostBoard","/home/mado/projects/fymate-configs/fymate/client/src/components/search/Board.tsx",[],"/home/mado/projects/fymate-configs/fymate/client/src/components/Profile/EditProfile.tsx",["124","125","126"],"import React, { Fragment, useState } from 'react'\nimport { Form, FormControl, FormGroup, FormLabel, Button } from 'react-bootstrap'\nimport { IUser, ITags, IUserPOST } from '../props/Interfaces'\nimport TagPanel from '../tags/TagPanel'\n\ninterface Props {\n    user: IUser,\n    tags: ITags[]\n}\nconst EditProfile: React.FC<Props> = ({ user, tags }) => {\n\n    const UserPOST: IUserPOST = {\n        profileDescription: user.profiledescription,\n        visibleName: \"\",\n        telephone: user.phone,\n        contactEmail: user.email,\n        tagIDs: []\n    }\n\n    //TODO SEND User :)\n    const SendChanges = (): void => {\n        console.log(UserPOST)\n    }\n\n    const getActiveTags: Function = (tags: ITags[]): void => {\n        var ids: number[] = []\n\n        tags.map(tag => {\n            ids.push(tag.tagid)\n        })\n        UserPOST.tagIDs = ids\n    }\n\n    return (\n        <Fragment>\n            <div className=\"edit-profile\">\n                <FormGroup>\n                    <FormLabel> Your tags</FormLabel>\n                    <TagPanel tags={tags} updateTags={getActiveTags}></TagPanel>\n                </FormGroup>\n                <FormGroup>\n                    <FormLabel>Email</FormLabel>\n                    <FormControl\n                        type=\"email\"\n                        placeholder={user.email}\n                        onChange={e => UserPOST.contactEmail = e.target.value}\n                    ></FormControl>\n\n                </FormGroup>\n                <FormGroup>\n                    <FormLabel>Telephone</FormLabel>\n                    <FormControl\n                        type=\"text\"\n                        placeholder={user.phone}\n                        onChange={e => UserPOST.telephone = e.target.value}\n                    >\n\n                    </FormControl>\n                </FormGroup>\n                <FormGroup>\n                    <FormLabel>Description</FormLabel>\n                    <FormLabel>Telephone</FormLabel>\n                    <FormControl\n                        type=\"text\"\n                        placeholder={user.profiledescription}\n                        onChange={e => UserPOST.profileDescription = e.target.value}\n                    ></FormControl>\n                </FormGroup>\n                <FormGroup>\n                    <Button\n                        className=\"btnFormSend\"\n                        variant=\"outline-success\"\n                        onClick={SendChanges}\n                    >\n                        Edit Profile\n                    </Button>\n                </FormGroup>\n\n            </div>\n        </Fragment>\n    )\n};\nexport default EditProfile","/home/mado/projects/fymate-configs/fymate/client/src/features/counter/selectors.ts",[],"/home/mado/projects/fymate-configs/fymate/client/src/features/counter/counterReducer.ts",["127"],"import { INCREMENT_COUNTER, DECREMENT_COUNTER } from './actionTypes'\nimport { CounterActionTypes } from './types'\n\nconst initialState = {\n  value: 0,\n}\n\nexport default (state = initialState, action: CounterActionTypes) => {\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return { ...state, value: state.value + 1 }\n    case DECREMENT_COUNTER:\n      return { ...state, value: state.value - 1 }\n    default:\n      return state\n  }\n}\n","/home/mado/projects/fymate-configs/fymate/client/src/features/counter/actionTypes.ts",[],"/home/mado/projects/fymate-configs/fymate/client/src/components/search/Post.tsx",[],"/home/mado/projects/fymate-configs/fymate/client/src/components/search/UserBoard.tsx",[],"/home/mado/projects/fymate-configs/fymate/client/src/components/tags/TagList.tsx",[],"/home/mado/projects/fymate-configs/fymate/client/src/components/search/UserCard.tsx",[],{"ruleId":"128","severity":1,"message":"129","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":14},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"128","severity":1,"message":"136","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"137","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":21},{"ruleId":"128","severity":1,"message":"138","line":3,"column":23,"nodeType":"130","messageId":"131","endLine":3,"endColumn":34},{"ruleId":"128","severity":1,"message":"139","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":25},{"ruleId":"140","severity":1,"message":"141","line":23,"column":1,"nodeType":"142","endLine":54,"endColumn":2},{"ruleId":"128","severity":1,"message":"143","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":15},{"ruleId":"128","severity":1,"message":"144","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":18},{"ruleId":"145","severity":1,"message":"146","line":29,"column":22,"nodeType":"147","messageId":"148","endLine":29,"endColumn":24},{"ruleId":"128","severity":1,"message":"149","line":28,"column":11,"nodeType":"130","messageId":"131","endLine":28,"endColumn":20},{"ruleId":"128","severity":1,"message":"150","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":16},{"ruleId":"128","severity":1,"message":"151","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":35},{"ruleId":"128","severity":1,"message":"152","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":28,"column":22,"nodeType":"147","messageId":"148","endLine":28,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":8,"column":1,"nodeType":"142","endLine":17,"endColumn":2},"@typescript-eslint/no-unused-vars","'dotenv' is defined but never used.","Identifier","unusedVar","no-native-reassign",["153"],"no-negated-in-lhs",["154"],"'store' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'getRefreshToken' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Counter' is defined but never used.","'LoginModal' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'UserPosts' is assigned a value but never used.","'TagPanel' is defined but never used.","'useState' is defined but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]